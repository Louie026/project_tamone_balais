#include "project.h"
#include <iostream>
#include <math.h>
using namespace std;
project::project()
{
    //ctor
}

project::~project()
{
    //dtor
}
void project::multiples_of_3_and_5()
{
    int num[1000];
    int x=0;

    for(int i=0; i<999; i++)
    {
        num[i] = i+1;
    }

    for(int a=0; a<999; a++)
    {
        if (num[a]%3==0||num[a]%5==0)
        {
            x=x+num[a];
        }
    }
cout << x<<endl;
}
void project::even_fibonacce()
{
    int num[33],x=0;
    int first=0,second=1,next=0;
    for (int i=0; i < 32 ; i++ )
    {
         next = first + second;
         first = second;
         second = next;
         num[i] = next;
    }
    for (int j=0;j<32;j++)
    {
        if (num[j]%2==0)
            x=x+num[j];
    }
    cout << x <<endl;
}
void project::largest_prime_factor()
{
    long long num = 600851475143LL;
    int ans = 0;
    for(int div = 3; ; div += 2)
        if(!(num % div)){
            do { num /= div; } while (!(num % div));
            if(num == 1){
                ans = div;
                break;
            }
        }
    cout << ans << endl;
}
int reverse(int x)
    {
    int y = x, z = 0;
    while(y){
        z = z * 10 + (y % 10);
        y /= 10;
    }
    return z;
}

void project::largest_palindrome_product()
{

    int ans = 0;
    for(int a = 999; a > 1; --a)
        for(int b = a; b > 1; --b){
            int x = a * b, z = reverse(x);
            if(x == z && x > ans) ans = x;
        }
cout << ans << endl;
}
void project::smallest_multiple()
{
    int ans=0;
    for (int i=0;i<300000000;i++)
    {
        if ((i%1==0) && (i%2==0) && (i%3==0) && (i%4==0) && (i%5==0) && (i%6==0) && (i%7==0) && (i%8==0) && (i%9==0) && (i%10==0)&&(i%11==0) && (i%12==0) && (i%13==0) && (i%14==0) && (i%15==0) && (i%16==0) && (i%17==0) && (i%18==0) && (i%19==0) && (i%20==0))
        ans=i;
    }
    cout << ans << endl;
}
void project::sum_square_diff()
{
    int j=0,k=0,y=0,z=0,ans=0;
    for (int i=0;i<=100;i++)
    {
        j=j+i;
    }
    k=j*j;

    for (int x=0;x<=100;x++)
    {
        y=x*x;
        z=z+y;
    }
    ans=k-z;
    cout << ans << endl;
}
bool isPrime(int p)
{
        bool result = true;

        for(int i=2; i<p; i++)
        {
                if(p % i == 0)
                {
                        result = false;
                        break;
                }
        }

        return result;
}

void project::tenthousandst_prime()
{
    int n = 2;
    int th = 10001;

        for(int i=0; i != th; n++)
        {
                if(isPrime(n) == true)
                {
                        i += 1;
                }
                if(i == th){break;}
        }
    cout << n << endl;
}
void project::largest_product_in_series()
{
    int j=0,k=0,l=0;
    int num[]={ 7,3,1,6,7,1,7,6,5,3,1,3,3,0,6,2,4,9,1,9,2,2,5,1,1,9,6,7,4,4,2,6,5,7,4,7,4,2,3,5,5,3,4,9,1,9,4,9,3,4,
                9,6,9,8,3,5,2,0,3,1,2,7,7,4,5,0,6,3,2,6,2,3,9,5,7,8,3,1,8,0,1,6,9,8,4,8,0,1,8,6,9,4,7,8,8,5,1,8,4,3,
                8,5,8,6,1,5,6,0,7,8,9,1,1,2,9,4,9,4,9,5,4,5,9,5,0,1,7,3,7,9,5,8,3,3,1,9,5,2,8,5,3,2,0,8,8,0,5,5,1,1,
                1,2,5,4,0,6,9,8,7,4,7,1,5,8,5,2,3,8,6,3,0,5,0,7,1,5,6,9,3,2,9,0,9,6,3,2,9,5,2,2,7,4,4,3,0,4,3,5,5,7,
                6,6,8,9,6,6,4,8,9,5,0,4,4,5,2,4,4,5,2,3,1,6,1,7,3,1,8,5,6,4,0,3,0,9,8,7,1,1,1,2,1,7,2,2,3,8,3,1,1,3,
                6,2,2,2,9,8,9,3,4,2,3,3,8,0,3,0,8,1,3,5,3,3,6,2,7,6,6,1,4,2,8,2,8,0,6,4,4,4,4,8,6,6,4,5,2,3,8,7,4,9,
                3,0,3,5,8,9,0,7,2,9,6,2,9,0,4,9,1,5,6,0,4,4,0,7,7,2,3,9,0,7,1,3,8,1,0,5,1,5,8,5,9,3,0,7,9,6,0,8,6,6,
                7,0,1,7,2,4,2,7,1,2,1,8,8,3,9,9,8,7,9,7,9,0,8,7,9,2,2,7,4,9,2,1,9,0,1,6,9,9,7,2,0,8,8,8,0,9,3,7,7,6,
                6,5,7,2,7,3,3,3,0,0,1,0,5,3,3,6,7,8,8,1,2,2,0,2,3,5,4,2,1,8,0,9,7,5,1,2,5,4,5,4,0,5,9,4,7,5,2,2,4,3,
                5,2,5,8,4,9,0,7,7,1,1,6,7,0,5,5,6,0,1,3,6,0,4,8,3,9,5,8,6,4,4,6,7,0,6,3,2,4,4,1,5,7,2,2,1,5,5,3,9,7,
                5,3,6,9,7,8,1,7,9,7,7,8,4,6,1,7,4,0,6,4,9,5,5,1,4,9,2,9,0,8,6,2,5,6,9,3,2,1,9,7,8,4,6,8,6,2,2,4,8,2,
                8,3,9,7,2,2,4,1,3,7,5,6,5,7,0,5,6,0,5,7,4,9,0,2,6,1,4,0,7,9,7,2,9,6,8,6,5,2,4,1,4,5,3,5,1,0,0,4,7,4,
                8,2,1,6,6,3,7,0,4,8,4,4,0,3,1,9,9,8,9,0,0,0,8,8,9,5,2,4,3,4,5,0,6,5,8,5,4,1,2,2,7,5,8,8,6,6,6,8,8,1,
                1,6,4,2,7,1,7,1,4,7,9,9,2,4,4,4,2,9,2,8,2,3,0,8,6,3,4,6,5,6,7,4,8,1,3,9,1,9,1,2,3,1,6,2,8,2,4,5,8,6,
                1,7,8,6,6,4,5,8,3,5,9,1,2,4,5,6,6,5,2,9,4,7,6,5,4,5,6,8,2,8,4,8,9,1,2,8,8,3,1,4,2,6,0,7,6,9,0,0,4,2,
                2,4,2,1,9,0,2,2,6,7,1,0,5,5,6,2,6,3,2,1,1,1,1,1,0,9,3,7,0,5,4,4,2,1,7,5,0,6,9,4,1,6,5,8,9,6,0,4,0,8,
                0,7,1,9,8,4,0,3,8,5,0,9,6,2,4,5,5,4,4,4,3,6,2,9,8,1,2,3,0,9,8,7,8,7,9,9,2,7,2,4,4,2,8,4,9,0,9,1,8,8,
                8,4,5,8,0,1,5,6,1,6,6,0,9,7,9,1,9,1,3,3,8,7,5,4,9,9,2,0,0,5,2,4,0,6,3,6,8,9,9,1,2,5,6,0,7,1,7,6,0,6,
                0,5,8,8,6,1,1,6,4,6,7,1,0,9,4,0,5,0,7,7,5,4,1,0,0,2,2,5,6,9,8,3,1,5,5,2,0,0,0,5,5,9,3,5,7,2,9,7,2,5,
                7,1,6,3,6,2,6,9,5,6,1,8,8,2,6,7,0,4,2,8,2,5,2,4,8,3,6,0,0,8,2,3,2,5,7,5,3,0,4,2,0,7,5,2,9,6,3,4,5,0};

    for(int i=0;i<=1000;i++)
    {
        j=num[i]*num[i+1]*num[i+2]*num[i+3]*num[i+4];
        k=j;
        if (k>l)
        l=k;
    }
    cout << l << endl;
}
void project::special_pytho_triplet()
{
    int ans=0,c=0;
    for(int a=0;a<1000;a++)
    {
        for(int b=a;b<1000;b++)
        {
            c=1000-b-a;
            if (a*a + b*b == c*c)
            ans=a*b*c;
        }
    }
    cout << ans << endl;
}
long long is_prime(long long n)
{
	if (n % 2 == 0)
		return 0;
	for (long long i = 3; i <= (pow(n,0.5)); i += 2)
	{
		if (n % i == 0)
			return 0;
	}
	return 1;
}
void project::summation_of_primes()
{
    unsigned long long ans = 0;

	for (int i = 3; i < 2000000; i += 2)
	{
		if (is_prime(i))
		{
			ans += i;
		}
	}

	cout << ans + 2 << endl;
}
